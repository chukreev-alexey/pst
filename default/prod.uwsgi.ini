[uwsgi]
vassal_name = {{ project_name }}
vassal_path = /home/web/%(vassal_name)
vassal_run = %(vassal_path)/run

; Main
master = true
auto-procname = true
procname-prefix = %(vassal_name)-
enable-threads = true
harakiri = 60
post-buffering = 8192
buffer-size=32768
vacuum = true

; Drop preveleges
uid = web
gid = web

; Run with at least 1 process but increase when needed
cheaper = 1
processes = 4

; Reload
reload-on-exception = true
touch-reload = %p

; Socket
chmod-socket = 666
socket = %(vassal_run)/uwsgi.sock

; Logging
disable-logging = true
ignore-sigpipe = true
ignore-write-errors = true
disable-write-exception=true
log-ioerror = true
log-date = true
logto2 = %(vassal_path)/log/uwsgi.log

; Application
need-app = true
no-default-app = true
chdir = %(vassal_path)/src
env = LANG=en_US.UTF-8
module = wsgi
pythonpath = %(vassal_path)/src
venv = /home/web/.virtualenvs/%(vassal_name)

vassal_managepy = %(venv)/bin/python %(pythonpath)/manage.py

; Django RQ worker
vassal_rqworker_name = %(vassal_name)-rqworker
vassal_rqworker_pidfile = %(vassal_run)/rqworker.pid
exec-pre-app = pkill -e -F %(vassal_rqworker_pidfile) || true
exec-post-app = /usr/bin/flock -xn %(vassal_run)/rqworker.lock -c '%(vassal_managepy) rqworker --name %(vassal_rqworker_name) --pid %(vassal_rqworker_pidfile) &'

; Cron
; https://uwsgi-docs.readthedocs.io/en/latest/Cron.html
cron2 = minute=0,unique=1 %(vassal_managepy) clearsessions

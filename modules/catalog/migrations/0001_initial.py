# Generated by Django 2.2.12 on 2020-05-26 12:29

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import filebrowser.fields
import itcase_common.models.mixins
import itcase_search.models.mixins
import mptt.fields
import re
import tinymce_4.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.ITCASE_CATALOG_CATEGORY_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('sort', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок сортировки')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(blank=True, max_length=255, verbose_name='Заголовок (title)')),
                ('seo_description', models.TextField(blank=True, help_text='Содержание тэга', verbose_name='Мета-дескриптор (description)')),
                ('seo_keywords', models.TextField(blank=True, help_text='Содержание тэга', verbose_name='Мета-дескриптор (keywords)')),
                ('seo_other', models.TextField(blank=True, help_text='HTML тэги', verbose_name='Мета-дескрипторы')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='Slug')),
                ('content', tinymce_4.fields.TinyMCEModelField(blank=True, verbose_name='Подробное описание')),
                ('image', filebrowser.fields.FileBrowseField(blank=True, max_length=255, verbose_name='Изображение')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='catalog.Category', verbose_name='Родительский элемент')),
            ],
            options={
                'verbose_name': 'Категория товаров',
                'verbose_name_plural': 'Категории товаров',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('image', filebrowser.fields.FileBrowseField(blank=True, max_length=255, verbose_name='Изображение')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('article', models.CharField(max_length=255, verbose_name='Артикул')),
                ('options', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Доп. параметры')),
                ('description', tinymce_4.fields.TinyMCEModelField(blank=True, verbose_name='Подробное описание')),
                ('pdf_instructtion', filebrowser.fields.FileBrowseField(blank=True, max_length=255, verbose_name='Инструкция')),
                ('pdf_components', filebrowser.fields.FileBrowseField(blank=True, max_length=255, verbose_name='Комплектующие')),
                ('scheme', filebrowser.fields.FileBrowseField(blank=True, max_length=255, verbose_name='Схема')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='catalog.Brand', verbose_name='Бренд')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalog_product_rel', to='catalog.Category', verbose_name='Категория')),
                ('related_products', models.ManyToManyField(blank=True, related_name='_product_related_products_+', to='catalog.Product', verbose_name='Комплектующие')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['name', 'price'],
                'abstract': False,
            },
            bases=(itcase_search.models.mixins.ESReprMixin, itcase_common.models.mixins.FromDBMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductColors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('sort', models.PositiveSmallIntegerField(default=0, verbose_name='Порядок')),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета товаров',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', filebrowser.fields.FileBrowseField(blank=True, max_length=255, verbose_name='Изображение')),
                ('sort', models.PositiveSmallIntegerField(default=0, verbose_name='Позиция')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='color_images', to='catalog.ProductColors', verbose_name='Цвет')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='catalog.Product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='PickingPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='product_prices', to='catalog.ProductColors', verbose_name='Цвет')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='color_prices', to='catalog.Product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Цена комплектации',
                'verbose_name_plural': 'Цены Комплектаций',
            },
        ),
    ]
